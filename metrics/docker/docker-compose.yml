version: '3.5'
# Note that the following should be defined in .env in current dir:
# VM_GRAPHITE_PORT=2003
# GRAFANA_PORT=3000
# Alternatively you may set them in your shell env, or define in another file and run:
#   docker-compose --env-file=some.env up
# 
services:
  prometheus:
    container_name: prometheus
    image: prom/prometheus:v2.17.1
    depends_on:
      - "victoriametrics"
    # ports:
      # Uncomment the following if you want access to prometheus from your localhost
      # - 9090:9090
    volumes:
      - promdata:/prometheus
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - vm_net
    restart: always
  victoriametrics:
    container_name: victoriametrics
    image: victoriametrics/victoria-metrics
    ports:
      # Uncomment the following if you want access to VictoriaMetrics from your localhost
      # - 8428:8428
      - ${VM_GRAPHITE_PORT}:2003
      # - 4242:4242
    volumes:
      - vmdata:/storage
    command:
      - '--storageDataPath=/storage'
      - '--graphiteListenAddr=:2003'
      # - '--opentsdbListenAddr=:4242'
      - '--httpListenAddr=:8428'
      - '--retentionPeriod=24'
    networks:
      - vm_net
    restart: always
  grafana:
    container_name: grafana
    image: grafana/grafana:6.7.1
    entrypoint: >
      /bin/sh -c "
      cd /var/lib/grafana &&
      mkdir -p dashboards &&
      sed 's/$${DS_PROMETHEUS}/Prometheus/g' vm.json > dashboards/vm.json &&
      sed 's/$${DS_VICTORIAMETRICS}/VictoriaMetrics/g' p4.json > dashboards/p4.json &&
      /run.sh"
    depends_on:
      - "victoriametrics"
    ports:
      - ${GRAFANA_PORT}:3000
    volumes:
      - grafanadata:/var/lib/grafana
      - ./provisioning/:/etc/grafana/provisioning/
      - ./../dashboards/victoriametrics.json:/var/lib/grafana/vm.json
      - ./../dashboards/p4historical.json:/var/lib/grafana/p4.json
    networks:
      - vm_net
    restart: always
volumes:
  promdata: {}
  vmdata: {}
  grafanadata: {}
networks:
  vm_net:
